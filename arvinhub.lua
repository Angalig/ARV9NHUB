do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==4) then vv9());break;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then local v64=0;while true do if (v64==0) then v19=v1(v4(v30,1,1));return "";end end else local v65=0;local v66;while true do if (0==v65) then v66=v3(v1(v30,16));if v19 then local v82=0;local v83;while true do if (0==v82) then v83=v6(v66,v19);v19=nil;v82=1;end if (v82==1) then return v83;end end else return v66;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v67=(v31/((1 + 1)^(v32-(3 -2))))%(((779 + 50) -(293 + 534))^(((v33-1) -(v32-(1 + 0 + 0))) + 1 + 0));return v67-(v67%(1 -0));else local v68=572 -((2416 -(1672 + 271)) + 99);local v69;while true do if (v68==(0 -0)) then v69=2^(v32-(1 + 0));return (((v31%(v69 + v69))>=v69) and ((1891 -(332 + 122)) -(1238 + (548 -350)))) or ((75 + 1859) -(487 + 1447));end end end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + (3 -1));v18=v18 + (908 -(48 + 858));return (v40 * (233 + 23)) + v39;end local function v23()local v41,v42,v43,v44=v2(v16,v18,v18 + 2 + 1);v18=v18 + 4;return (v44 * (5761561 + 11015655)) + (v43 * 65536) + (v42 * (170 + 86)) + v41;end local function v24()local v45=0 -0;local v46;local v47;while true do if (v45==((0 + 0) -0)) then v46=v23();v47=v23();v45=1;end if (v45==(1 + 0 + 0)) then return (( -((547 -(90 + 233)) -(67 + 155)) * v20(v47,1498 -(777 + 689))) + 1) * ((3 -1)^(v20(v47,21,486 -((1261 -(994 + 95)) + 283)) -(2209 -1186))) * ((((v20(v47,1 + 0,3 + 17) * ((349 -(227 + 120))^32)) + v46)/((3 -(3 -2))^(106 -54))) + 1 + 0);end end end local function v25(v34)local v48;if  not v34 then local v70=0 + 0;while true do if (v70==(0 + 0)) then v34=v23();if (v34==(0 -0)) then return "";end break;end end end v48=v4(v16,v18,(v18 + v34) -(1575 -(25 + 200 + (1770 -421))));v18=v18 + v34;local v49={};for v62=262 -(183 + 78), #v48 do v49[v62]=v3(v2(v4(v48,v62,v62)));end return v7(v49);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v50=1950 -(1058 + 892);local v51;local v52;local v53;local v54;local v55;local v56;local v57;while true do if (v50==1) then local v71=1156 -(237 + 919);local v72;while true do if (0==v71) then v72=322 -(125 + 197);while true do if (1~=v72) then else v50=2;break;end if (v72==0) then local v100=0 + 0;while true do if (v100==(3 -2)) then v72=1;break;end if (v100~=(1718 -(1160 + 558))) then else v53=nil;v54=nil;v100=1 -0;end end end end break;end end end if (v50==(990 -(939 + 49))) then local v73=609 -(262 + 347);while true do if (v73==(1940 -(1104 + 835))) then v50=3;break;end if (v73~=(1181 -(835 + 346))) then else v55=nil;v56=nil;v73=1;end end end if (v50==(1 + 2)) then v57=nil;while true do local v75=0;local v76;while true do if (v75==0) then v76=0;while true do if (v76==1) then if (v51~=(0 + 0)) then else local v104=0;while true do if ((0 -0)==v104) then v52={};v53={};v104=1599 -(89 + 1509);end if (v104~=(5 -3)) then else v51=1;break;end if (v104==(1064 -(416 + 647))) then local v106=0;while true do if (v106~=(1825 -(343 + 1481))) then else v104=2;break;end if (0==v106) then v54={};v55={v52,v53,nil,v54};v106=1;end end end end end break;end if (v76~=(0 -0)) then else local v101=0;while true do if (v101==(2 -1)) then v76=1;break;end if (v101==0) then local v105=0 -0;while true do if (v105==1) then v101=1;break;end if (v105~=(0 + 0)) then else if (v51==(7 -5)) then local v109=0;local v110;local v111;while true do if (v109==1) then while true do if (v110==(0 -0)) then v111=0;while true do local v120=0 -0;local v121;while true do if (0==v120) then v121=0;while true do if (v121~=0) then else if (v111==(0 + 0)) then for v244=1,v23() do local v245=0;local v246;while true do if (0==v245) then v246=v21();if (v20(v246,1,1)==(0 + 0)) then local v278=0 + 0;local v279;local v280;local v281;local v282;while true do if (v278==0) then v279=0;v280=nil;v278=1 + 0;end if (v278==2) then while true do if (v279==2) then if (v20(v281,1,2 -1)~=1) then else v282[174 -(162 + 10)]=v57[v282[2]];end if (v20(v281,1 + 1,1776 -(911 + 863))==1) then v282[3]=v57[v282[3]];end v279=3 + 0;end if (v279==0) then local v297=965 -(898 + 67);while true do if (v297~=(1523 -(823 + 700))) then else local v304=0;while true do if (v304==(0 + 0)) then v280=v20(v246,2,543 -(442 + 98));v281=v20(v246,4,464 -(304 + 154));v304=2 -1;end if (v304==(1607 -(819 + 787))) then v297=1 + 0;break;end end end if (1==v297) then v279=212 -(8 + 203);break;end end end if ((4 -3)~=v279) then else v282={v22(),v22(),nil,nil};if (v280==(820 -(241 + 579))) then local v302=1310 -(1306 + 4);while true do if ((0 + 0)~=v302) then else v282[3]=v22();v282[1 + 3]=v22();break;end end elseif (v280==1) then v282[250 -(197 + 50)]=v23();elseif (v280==(1 + 1)) then v282[520 -(128 + 389)]=v23() -(2^(46 -30));elseif (v280==(1999 -(16 + 1980))) then local v311=1722 -(1245 + 477);local v312;local v313;while true do if (v311==(1 -0)) then while true do if (v312~=0) then else v313=970 -(490 + 480);while true do if (v313~=0) then else v282[3]=v23() -(2^16);v282[4]=v22();break;end end break;end end break;end if (v311==(1963 -(1633 + 330))) then v312=0;v313=nil;v311=1;end end end v279=2;end if (v279==(7 -4)) then if (v20(v281,3,368 -(175 + 190))==(2 -1)) then v282[1782 -(495 + 1283)]=v57[v282[4 + 0]];end v52[v244]=v282;break;end end break;end if (v278~=(1530 -(1297 + 232))) then else v281=nil;v282=nil;v278=7 -5;end end end break;end end end for v247=1,v23() do v53[v247-1]=v28();end v111=1 + 0;end if (v111~=1) then else for v249=1358 -(575 + 782),v23() do v54[v249]=v23();end return v55;end break;end end break;end end end break;end end break;end if (v109==0) then v110=0;v111=nil;v109=1;end end end if (1~=v51) then else local v112=0;while true do if (v112==(0 -0)) then local v113=0;while true do if (v113==(0 + 0)) then v56=v23();v57={};v113=1 + 0;end if (v113==1) then v112=1;break;end end end if (v112~=(5 -3)) then else v51=2 + 0;break;end if (v112~=(2 -1)) then else for v115=942 -(34 + 907),v56 do local v116=0;local v117;local v118;local v119;while true do if (v116==0) then v117=176 -(31 + 145);v118=nil;v116=1 + 0;end if (v116~=1) then else v119=nil;while true do if (v117~=(85 -(33 + 52))) then else local v173=0 + 0;while true do if (v173==(1 + 0)) then v117=1 + 0;break;end if (v173==(0 -0)) then v118=v21();v119=nil;v173=1 + 0;end end end if (v117~=1) then else if (v118==(1 -0)) then v119=v21()~=0;elseif (v118==2) then v119=v24();elseif (v118==3) then v119=v25();end v57[v115]=v119;break;end end break;end end end v55[6 -3]=v21();v112=2;end end end v105=1;end end end end end end break;end end end break;end if (v50==(0 -0)) then local v74=1726 -(613 + 1113);while true do if (v74~=0) then else v51=0;v52=nil;v74=700 -(205 + 494);end if (v74==(1908 -(1086 + 821))) then v50=1353 -(234 + 1118);break;end end end end end local function v29(v35,v36,v37)local v58=0;local v59;local v60;local v61;while true do if (v58==1) then v61=v35[3];return function(...)local v77=1;local v78= -1;local v79={...};local v80=v12("#",...) -1;local function v81()local v84=v59;local v85=Const;local v86=v60;local v87=v61;local v88=v27;local v89={};local v90={};local v91={};for v96=0,v80 do if (((319 + 1798)==(8000 -5883)) and (v96>=v87)) then v89[v96-v87]=v79[v96 + 1 + 0];else v91[v96]=v79[v96 + 1 + (0 -0)];end end local v92=(v80-v87) + (1386 -(20 + 1365));local v93;local v94;while true do local v97=0 + 0 + 0;local v98;local v99;while true do if (((469 -257)<=(3030 -(145 + 369))) and (v97==(1232 -(1146 + 86)))) then v98=0 + 0;v99=nil;v97=1671 -(67 + 1603);end if (((491 + 676)>=(2407 -(1207 + 258))) and (v97==1)) then while true do if ((v98==(777 -(71 + 706))) or ((1496 -747)>=(3980 -2248))) then v99=0;while true do if (((42 + 31)<(3645 -((503 -178) + 365))) and (0==v99)) then local v107=1574 -((3860 -2572) + (1539 -(443 + 810)));local v108;while true do if ((v107==(1343 -(541 + 802))) or ((2515 -688)>=((2369 + 4046) -2663))) then v108=1665 -(32 + 1633);while true do if ((v108==(2 -1)) or ((141 + (3340 -(707 + 345)))<(3197 -(54 + 170 + 882)))) then v99=1 + 0;break;end if ((v108==(0 + (1256 -(876 + 380)))) or ((4031 -(424 + 518))<589)) then v93=v84[v77];v94=v93[1];v108=1 + 0;end end break;end end end if (((290 + 533)<(3968 -(90 + 497))) and ((1 -0)==v99)) then if ((453<3608) and (v94<=(18 + 2))) then if ((v94<=9) or ((1183 -724)>3099)) then if ((v94<=((1572 -(575 + 995)) + 2)) or (4379<((2390 -(254 + 268)) -(361 + 630)))) then if ((v94<=(1494 -(964 + (2411 -(1376 + 506))))) or ((3873 -2671)<=(2436 -1280))) then if ((v94==(0 -0)) or ((1164 + 2602)<=(5623 -3421))) then v91[v93[2]]=v93[3] + v91[v93[2 + 2]];else local v123=0 -(30 -(9 + 21));local v124;local v125;local v126;local v127;while true do if ((v123==(0 + 0)) or ((2226 -(382 + 304))>=(6381 -1538))) then v124=0;v125=nil;v123=1282 -(188 + 1093);end if ((1==v123) or ((3563 -2353)>(4252 -(424 + 1483)))) then v126=nil;v127=nil;v123=2 + 0;end if (((2 + 0)==v123) or ((6780 -4342)<(93 + 49 + 336))) then while true do if ((v124==(449 -(352 + 97))) or (4222==(12701 -8204))) then v125=v93[2 + 0];v126=v91[v125 + (3 -1)];v124=2 -1;end if ((v124==(1 + 0)) or ((95 -59)>=(603 + 2090))) then v127=v91[v125] + v126;v91[v125]=v127;v124=2 -0;end if ((v124==(1 + 1)) or (2387>3122)) then if (((5023 -(137 + 12 + (2002 -706)))>362) and (v126>0)) then if (((604 + 653)<=1535) and (v127<=v91[v125 + 1 + (385 -(363 + 22))])) then local v273=0 + 0;while true do if (((934 + 133)==(534 + 533)) and (v273==(1494 -(767 + 53 + 674)))) then v77=v93[5 -2];v91[v125 + (762 -(151 + 230 + 378))]=v127;break;end end end elseif ((((23374 -18217) -(35 + 224))>=443) and (v127>=v91[v125 + (1 -0) + 0])) then local v274=0 -(0 -0);local v275;while true do if ((v274==(1685 -(418 + 1267))) or (896>=(10337 -7095))) then v275=0;while true do if ((v275==(0 -0)) or ((7744 -3872)<=(11088 -7853))) then v77=v93[4 -1];v91[v125 + (709 -(262 + 444))]=v127;break;end end break;end end end break;end end break;end end end elseif (((665 + (7793 -5984))>=(5635 -3759)) and (v94<=(1087 -(500 + 585)))) then local v128=0;local v129;local v130;while true do if (((516 + 2265)>=((2756 -(232 + 262)) -(1099 + 158))) and (v128==(1 + 0))) then for v213=1, #v90 do local v214=0 + 0;local v215;while true do if ((((2214 + 1259) -1162)>(615 + (420 -310))) and (v214==(0 -0))) then v215=v90[v213];for v264=0 + 0, #v215 do local v265=0 + 0;local v266;local v267;local v268;local v269;while true do if (((94 + 1869)==1963) and (v265==(3 -1))) then while true do if ((v266==(1 + 0)) or (3176<=(2236 -1608))) then v269=v267[1 + 1];if (((v268==v91) and (v269>=v129)) or ((1249 + 2500)<=465)) then local v294=0;local v295;while true do if ((v294==(1619 -(752 + 867))) or ((176 + 10)>=(1508 -(66 + 361)))) then v295=0 + 0 + 0;while true do if ((v295==0) or (996>(2196 + 230))) then v130[v269]=v268[v269];v267[1 + 0]=v130;break;end end break;end end end break;end if ((4203<=((201 + 14936) -10460)) and ((1889 -(930 + 959))==v266)) then v267=v215[v264];v268=v267[1];v266=1;end end break;end if (((35 + 68)<=(6818 -3803)) and (1==v265)) then v268=nil;v269=nil;v265=2 -0;end if (((1827 + 2837)>=(4566 -(315 + 169))) and (v265==(0 -0))) then v266=1795 -(1396 + 399);v267=nil;v265=1;end end end break;end end end break;end if (((29 + 684)<=((9648 + 1742) -6518)) and (v128==(0 + 0))) then v129=v93[1 + (141 -(68 + 72))];v130={};v128=1 + 0;end end elseif (((3224 -(215 + 657))==(3558 -(859 + 347))) and (v94==(8 -5))) then do return;end elseif ((v93[1 + 1]==v91[v93[(950 + 283) -(370 + (2237 -(1192 + 186)))]]) or ((3609 -(1873 + 47))>=(6779 -3509))) then v77=v77 + (3 -2);else v77=v93[6 -3];end elseif ((1573==((751 -418) + 1240)) and (v94<=6)) then if ((v94==((765 + 343) -(512 + 591))) or ((84 + 2263)<(1426 + 237))) then local v131=(177 + 175) -(214 + 115 + 23);local v132;local v133;local v134;while true do if (((10142 -5302)==((6904 -(263 + 812)) -(590 + 399))) and (v131==(3 -(2 + 0)))) then v134=nil;while true do if ((v132==(0 + 0)) or ((703 + 1180)<(2147 -695))) then local v222=0 + 0;while true do if (((12418 -(11240 -(521 + 969)))==(1927 + 741)) and (v222==(0 + 0))) then v133=v93[(1939 -(258 + 1680)) + 1];v134=v91[v93[2 + 1]];v222=1;end if (((3596 -1874)>429) and (v222==(1 -0))) then v132=692 -(633 + 58);break;end end end if (((3 -(2 + 0))==v132) or ((3215 + 630 + 1001)<(3829 + 1005))) then v91[v133 + (1544 -(290 + 1253))]=v134;v91[v133]=v134[v93[4]];break;end end break;end if (((0 + 0)==v131) or ((7379 -4167)==((6570 -(4 + 12)) -(488 + 1108)))) then v132=0 -0;v133=nil;v131=1;end end else v91[v93[1 + 1]][v91[v93[10 -7]]]=v91[v93[1596 -(455 + 1137)]];end elseif (((2457 + 2330)>=(2386 -(121 + 116 + 700))) and (v94<=(1784 -(956 + 821)))) then v91[v93[1457 -(1118 + 337)]]=v36[v93[3]];elseif ((v94>(10 -2)) or ((1167 -658)>=(19179 -15126))) then local v175=0 -0;local v176;local v177;local v178;local v179;while true do if ((v175==((3 -2) -0)) or ((5240 -2986)>(8209 -4880))) then local v216=0;while true do if (((2818 + 57)<(10213 -6263)) and (v216==(1 -0))) then v175=4 -2;break;end if (((1306 -(2259 -(1099 + 307)))<=(1141 + 742 + 701)) and (v216==(1395 -(725 + 670)))) then v78=(v178 + v176) -(1 + 0 + 0);v179=0 -0;v216=1 + 0;end end end if (((1829 -(88 + 1741))==v175) or (((1584 + 3130) -((1566 -(1028 + 81)) + 542))>=(14787 -10447))) then v176=v93[1 + 1];v177,v178=v88(v91[v176](v91[v176 + 1]));v175=(212 -(116 + 95)) + 0;end if (((153 + 1516)<=(3406 -(61 + 1153))) and (v175==(2 + 0))) then for v225=v176,v78 do local v226=0 + 0;local v227;while true do if (((6741 -4586)>=(3423 -(296 + 1248))) and ((0 -(0 -0))==v226)) then v227=0 + 0;while true do if (((2418 -981)<=(4509 -((2883 -1874) + 581))) and (v227==(0 + 0))) then v179=v179 + (2 -1);v91[v225]=v177[v179];break;end end break;end end end break;end end else local v180=(305 + 335) -(490 + 150);local v181;local v182;local v183;while true do if ((4046>(5424 -(1268 + (1214 -761)))) and (v180==(1 + 0))) then v183=v91[v181 + 2];if ((v183>(0 + 0)) or (4454<4281)) then if (((299 + 367)<=(9906 -(3023 + 2183))) and (v182>v91[v181 + 1 + 0])) then v77=v93[6 -3];else v91[v181 + (1193 -(745 + 445))]=v182;end elseif ((v182<v91[v181 + (1 -0)]) or ((1609 -(65 + 71))>=(2504 + 2041))) then v77=v93[99 -(5 + 91)];else v91[v181 + 1 + (6 -4)]=v182;end break;end if ((0==v180) or ((1166 -((2890 -1972) + 19))>(3757 -(1292 + 51)))) then local v217=0 -0;while true do if (((2938 + (1011 -(136 + 793)))<((6366 -4122) + 1534)) and (v217==(2 -1))) then v180=1;break;end if (((1385 -(71 + 1314))==v217) or ((15722 -11295)<=(767 + 1298))) then v181=v93[2];v182=v91[v181];v217=2 -1;end end end end end elseif (((2191 -1309)<=((6106 -(499 + 334)) -(1561 + 234))) and (v94<=(722 -(365 + 343)))) then if ((v94<=(20 -9)) or ((158 + 64)>(773 + 1956))) then if (((3214 -((1690 -1290) + 17))>(3439 -(1060 + 345))) and (v94==10)) then local v137=1048 -(660 + 388);local v138;local v139;local v140;local v141;local v142;while true do if ((v137==2) or ((6084 -(1155 + 414 + 368))<=(11442 -8443))) then v142=nil;while true do if ((v138==(954 -(595 + 357))) or ((344 -(186 + 60))>=(1095 -794))) then for v251=v139,v78 do local v252=0;local v253;while true do if ((2628==(2034 + (1033 -439))) and (v252==(0 + 0))) then v253=0 + 0;while true do if ((v253==0) or (1954>=3037)) then v142=v142 + (1388 -(795 + 592));v91[v251]=v140[v142];break;end end break;end end end break;end if ((v138==0) or ((11796 -6801)<(1174 -(195 + 776)))) then v139=v93[1 + 1];v140,v141=v88(v91[v139](v13(v91,v139 + 1 + 0,v93[1345 -(77 + (2865 -(1284 + 316)))])));v138=992 -(234 + 757);end if (((2878 + 1023)>(1680 + 2079)) and (v138==(1 + 0))) then local v228=384 -(283 + 101);while true do if ((v228==(498 -(491 + 6))) or ((4064 -(439 + 180))<(1886 + (347 -172)))) then v138=2;break;end if (((4511 -3222)<(4965 -(439 + 313))) and (v228==(0 + 0))) then v78=(v141 + v139) -((4 -2) -1);v142=0 + 0;v228=(1769 -(229 + 380)) -(1017 + 142);end end end end break;end if (((4644 -2557)>((1954 -(494 + 58)) -(7 + 1358))) and (v137==0)) then v138=387 -(156 + 231);v139=nil;v137=2 -1;end if ((v137==(1 + (0 -0))) or ((7407 -(4351 -(47 + 1490)))<(5302 -3930))) then v140=nil;v141=nil;v137=26 -(9 + 15);end end elseif ((v91[v93[532 -(500 + 30)]]==v91[v93[(645 -(557 + 84)) + (797 -(666 + 131))]]) or ((2138 + 784)>=(5972 -(547 + 990)))) then v77=v77 + 1 + 0 + 0;else v77=v93[6 -3];end elseif (((4991 -(1752 + 196))>=(539 + 1325)) and (v94<=(6 + 6))) then v91[v93[378 -(312 + 64)]]=v93[3];elseif (((5129 -(127 + 434))==(7906 -3338)) and (v94>13)) then v91[v93[(2 + 3) -3]]={};else v91[v93[343 -(157 + 184)]]=v91[v93[3]] + v93[(5 + 7) -8];end elseif ((v94<=((144 + 31) -(35 + 78 + 45))) or ((2568 -(698 + 988))>(1229 + 3629))) then if ((v94<=(32 -17)) or (1241>=(2001 -(134 + 553)))) then local v144=0 -(0 -0);local v145;local v146;local v147;while true do if (((3894 + 301)<4602) and (v144==(62 -(30 + 31)))) then v147=nil;while true do if ((v145==(0 + 0)) or (((15755 -11798) -(410 + 727))>=(3137 + 563))) then local v229=0;while true do if ((4045>(201 + 3505)) and ((0 -0)==v229)) then v146=v93[3];v147=v91[v146];v229=1813 -(842 + 970);end if (((3005 -(68 + 698))<=(15256 -10676)) and (v229==(1946 -(1748 + 146 + 51)))) then v145=1 -0;break;end end end if (((4700 -(1477 + 179))>(3210 -1978)) and (v145==(71 -(20 + 50)))) then for v254=v146 + (415 -(239 + 175)),v93[10 -6] do v147=v147   .. v91[v254];end v91[v93[(1910 -(250 + 1658)) -0]]=v147;break;end end break;end if ((((6652 -(443 + 699)) -3968)==(2073 -(452 + 64 + 15))) and (v144==(0 + 0))) then v145=1808 -(509 + (1916 -617));v146=nil;v144=1 + 0;end end elseif ((1374==(1520 -(104 + 42))) and (v94>(1155 -(16 + 179 + 944)))) then v91[v93[1 + 1 + 0]][v91[v93[2 + 1]]]=v93[608 -(7 + 394 + (699 -496))];else v77=v93[14 -11];end elseif ((v94<=(8 + 10)) or (((5515 -4256) + 940)<(3682 -2629))) then v91[v93[2 + 0]]=v91[v93[7 -4]][v93[15 -11]];elseif ((v94>(2 + 17)) or (((3061 -1878) -757)>=(1123 -(30 + 132 + 524)))) then v91[v93[2]]=v91[v93[(679 + 1018) -(1468 + 226)]] -v93[4];else for v209=v93[2],v93[280 -((1847 -(425 + 1191)) + 46)] do v91[v209]=nil;end end elseif ((v94<=31) or ((3425 -(531 + 732))>(3890 -(1325 + 200 + 52)))) then if (((3387 -(656 + 463))==2268) and (v94<=(42 -17))) then if ((v94<=(5 + 17)) or ((583 + 331)==(5770 -(1129 + 780 + 84)))) then if (((1551 -(747 + 688))<(13 + (1169 -(743 + 255)))) and (v94>21)) then local v149=0 -0;local v150;while true do if ((v149==(0 + 0)) or ((4141 -((160 -(47 + 66)) + 139))>(5605 -(407 + 761)))) then v150=v93[2];v91[v150]=v91[v150]();break;end end else local v151=0;local v152;local v153;while true do if (((1669 + 527)<=(5686 -(738 + 1130))) and (v151==(1209 -(757 + 452)))) then local v212=0;while true do if ((v212==1) or ((2523 -(328 + 226 + 46))>(4356 -1938))) then v151=1;break;end if ((v212==(983 -(617 + 366))) or (3493<=(1273 + 310))) then v152=802 -(276 + 526);v153=nil;v212=1;end end end if ((v151==(2 -1)) or ((3028 -(221 + 42))==(2838 -(14 + 11)))) then while true do if ((2352==(4603 -2251)) and (v152==(0 -(0 + 0)))) then v153=v93[3 -(1 + 0)];v91[v153](v13(v91,v153 + 1 + 0,v93[3]));break;end end break;end end end elseif ((v94<=((124 -(31 + 28)) -42)) or (578>=(11253 -7269))) then v91[v93[502 -(237 + 263)]]=v91[v93[10 -7]];elseif ((v94==(407 -(196 + 187))) or (3398<=(995 + 1164))) then local v188=0 -(0 + 0);local v189;local v190;local v191;while true do if ((((1562 + 3030) -(1155 + (728 -508)))>=(6940 -(4589 -(34 + 20)))) and (v188==2)) then for v231=1 + 0,v93[4] do local v232=0 + 0;local v233;local v234;while true do if (((4283 -2958)<1534) and (v232==(1 + 0))) then while true do if (((90 + 2779)==(832 + 2037)) and (v233==(338 -(94 + 243)))) then if (((5902 -(593 + 1297))>=(11418 -8126)) and (v234[1]==(1618 -(1530 + 65)))) then v191[v231-1]={v91,v234[1 + 2]};else v191[v231-(1 -0)]={v36,v234[1010 -(987 + (688 -(395 + 273)))]};end v90[ #v90 + (2 -1)]=v191;break;end if (((2639 + 82)<2922) and (v233==0)) then local v285=0;local v286;while true do if (((9768 -5571)>=(3701 -(230 + 487))) and ((1716 -(658 + 220 + 838))==v285)) then v286=0 + 0 + 0;while true do if ((v286==(0 -0)) or (3589>(5721 -1487))) then local v299=324 -(230 + 94);while true do if ((4726>=1375) and (v299==(1685 -(580 + 1105)))) then v77=v77 + (3 -2);v234=v84[v77];v299=582 -(78 + 503);end if ((v299==(1 + 0)) or ((2952 -(1027 + 418 + 313))>(11229 -(11914 -5650)))) then v286=1 + (0 -0);break;end end end if (((1982 -(1206 + 775))==v286) or ((2747 -(376 + 951 + 345))>(520 + 826))) then v233=(1 -0) + 0;break;end end break;end end end end break;end if (((760 + 3443)==4203) and (v232==(0 -0))) then local v272=0 -0;while true do if ((v272==0) or (((1875 -(755 + 188)) -652)==(1418 -(1253 + 12)))) then v233=588 -(421 + 167);v234=nil;v272=437 -(412 + (261 -(138 + 99)));end if (((3247 + 1117)>((6407 -3786) -1588)) and (v272==(1973 -(1530 + 442)))) then v232=1 + 0 + 0;break;end end end end end v91[v93[2]]=v29(v189,v190,v37);break;end if ((779<(2543 -1250)) and (v188==(0 -0))) then local v219=0 + 0;while true do if ((v219==0) or (1426<(328 -(44 + 76)))) then v189=v86[v93[3 + 0]];v190=nil;v219=1103 -(2 + 18 + 1082);end if (((1906 + 373)>=(1031 + 451)) and (v219==1)) then v188=2 -1;break;end end end if ((2008==(345 + 1663)) and ((1827 -(1224 + 602))==v188)) then v191={};v190=v10({},{__index=function(v235,v236)local v255=0 -0;local v256;while true do if ((v255==0) or ((2111 + 1010)>(15320 -11980))) then local v276=0 -0;while true do if (((2628 + 1806)==(7384 -2950)) and (v276==(487 -(262 + 225)))) then v256=v191[v236];return v256[2 -1][v256[9 -7]];end end end end end,__newindex=function(v237,v238,v239)local v257=340 -(62 + 278);local v258;local v259;local v260;while true do if (((8234 -5403)>=1932) and (v257==(1 + 0))) then v260=nil;while true do if ((3684<4628) and ((0 + 0)==v258)) then v259=0 + (1242 -(108 + 1134));v260=nil;v258=1 + 0;end if ((v258==1) or (3662<2974)) then while true do if (((273 + 2355)<=3513) and (v259==(0 + 0))) then v260=v191[v238];v260[(1826 -(42 + 15)) -(1181 + 587)][v260[2]]=v239;break;end end break;end end break;end if (((5 + 90)==(263 -168)) and (0==v257)) then v258=0 + 0;v259=nil;v257=605 -(161 + 443);end end end});v188=2 + 0;end end else v91[v93[2]]=v29(v86[v93[1894 -(666 + 1225)]],nil,v37);end elseif ((v94<=28) or ((100 + 432)>(619 + 2646))) then if ((v94<=((2264 -560) -(742 + 936))) or (2903==1370)) then local v155=0;local v156;local v157;local v158;while true do if ((((1839 + 1001) -(1341 + 604))<=((156 -38) + 1069)) and ((1235 -(504 + 730))==v155)) then v158=nil;while true do if (((3676 -(58 + 127))==(4037 -(207 + 339))) and (v156==0)) then v157=637 -((784 -(258 + 357)) + 468);v158=nil;v156=185 -(138 + 46);end if ((v156==1) or ((1617 -((1103 -(245 + 750)) + 3))==((7364 -4764) -(501 + 405)))) then while true do if ((v157==(0 -0)) or ((16672 -13281)>(6923 -2324))) then v158=v91[v93[4]];if ( not v158 or (((5412 -3429) + 645)<(1393 -(749 + 643)))) then InstrPoint=InstrPoint + 1;else local v277=0 + 0;while true do if ((v277==(0 + 0)) or ((2373 -(778 + 913))>=(3335 + 343))) then v91[v93[2]]=v158;InstrPoint=v93[3];break;end end end break;end end break;end end break;end if (((3117 -(16 + 320))<=3150) and (v155==(494 -(470 + 24)))) then v156=219 -(157 + 62);v157=nil;v155=1;end end elseif (((1887 -(774 -(345 + 45)))>=(3539 -2201)) and (v94==(697 -(71 + 599)))) then v91[v93[2]][v93[1329 -((2502 -(572 + 1088)) + 484)]]=v91[v93[4 + 0]];else local v194=0;local v195;local v196;while true do if (((8042 -4308)>(3436 -(1199 + 728))) and (((999 + 874) -(1302 + 571))==v194)) then local v220=0;while true do if (((1946 -(82 + 201))==(1496 + 167)) and (v220==(714 -(238 + 475)))) then v194=2 -1;break;end if ((v220==(0 + 0)) or ((2719 + 1979)==((398 + 842) -801))) then v195=0 + (0 -0);v196=nil;v220=1 -0;end end end if (((397 + 1)<=(3516 -1434)) and (1==v194)) then while true do if ((((3320 -(636 + 253)) -(173 + 161))<=(6707 -(596 + 1167))) and (v195==(0 -0))) then v196=v93[4 -2];v91[v196](v91[v196 + (2 -1)]);break;end end break;end end end elseif ((v94<=29) or ((1099 -872)>=(5011 -(397 + 78)))) then local v159=0 + 0;local v160;local v161;while true do if (((392 -249)<=(10259 -5738)) and (v159==(1 + 0))) then while true do if (((1801 -(134 + 344))==(762 + 561)) and ((0 + 0)==v160)) then v161=v93[1 + 1];v91[v161]=v91[v161](v13(v91,v161 + 1,v93[3]));break;end end break;end if (((3555 -(768 + (2207 -1060)))<(996 + 2748)) and (v159==(0 -0))) then v160=454 -(4 + 450);v161=nil;v159=1 -(0 + 0);end end elseif (((3362 -(334 + 1270))<=3726) and (v94==(1840 -(568 + 1141 + 101)))) then v37[v93[3 + 0]]=v91[v93[1669 -(119 + 1548)]];else v91[v93[(2884 -2173) -(661 + 48)]]=v91[v93[4 -(1 + 0)]]%v93[7 -3];end elseif ((v94<=(16 + 20)) or ((5570 -(195 + 580))==1857)) then if ((v94<=33) or (953>=(1217 + 2381))) then if (((1791 -(1315 + 82))==394) and (v94>(1031 -(716 + 283)))) then v91[v93[491 -(378 + 111)]]=v91[v93[3]]%v91[v93[8 -4]];else local v163=0 -0;local v164;local v165;while true do if ((v163==(0 -(785 -(207 + 578)))) or ((2563 -(192 + 1717))>=(6376 -3129))) then v164=0;v165=nil;v163=1 + 0;end if ((v163==(1 + 0 + 0)) or ((2699 -(288 + 188))==(12514 -8214))) then while true do if ((381<((1398 -(823 + 524)) + 1646)) and (v164==(1610 -(357 + 1253)))) then v165=v93[8 -6];v91[v165]=v91[v165](v13(v91,v165 + (1252 -(601 + 109 + 541)),v78));break;end end break;end end end elseif ((v94<=((4329 -2761) -((1720 -744) + 558))) or ((2940 -(882 + 615))==(1957 -1214))) then v91[v93[2]]=v93[6 -3]~=(981 -(760 + 221));elseif ((v94==(1519 -(189 + 76 + 1219))) or (90>=((460 -224) + 685))) then v91[v93[2 -0]]();else local v199=0 -0;local v200;local v201;while true do if (((339 + 99)<=(646 + 404)) and (v199==1)) then while true do if (((792 + 252)==(1834 -(755 + 35))) and (v200==0)) then v201=v93[834 -(70 + 46 + 716)];do return v91[v201](v13(v91,v201 + 1 + 0,v93[3 + 0]));end break;end end break;end if ((v199==(0 + 0)) or ((4380 -(263 + 27))<(2499 + 1531))) then v200=0 + 0;v201=nil;v199=1 + 0;end end end elseif (((672 + 92)<(3385 -(114 + 173 + 3))) and (v94<=39)) then if (((2626 -1310)<=(14025 -10896)) and (v94<=(47 -10))) then if ((3643>(11417 -8697)) and (v91[v93[7 -5]]==v93[1204 -(345 + 855)])) then v77=v77 + 1 + 0;else v77=v93[763 -(499 + 261)];end elseif (((4309 -(699 + 122))>=(1608 -(52 + 758))) and (v94>(5 + 33))) then v91[v93[1 + 1]]=v37[v93[3 + 0]];else local v203=0 + 0;local v204;while true do if (((2991 -1521)<((4463 -(539 + 86)) -((1514 -(243 + 547)) + 916))) and (v203==(0 + 0))) then v204=v93[(4 -3) + 1];do return v13(v91,v204,v78);end break;end end end elseif ((v94<=(32 + 8)) or ((6239 -(1152 + 720))>(14979 -10165))) then local v167=0 -0;local v168;local v169;local v170;local v171;local v172;while true do if (((8420 -4898)>=(3356 -(1106 + 167))) and (v167==(264 -(118 + 144)))) then v172=nil;while true do if (((1 -0)==v168) or (3716<=(1214 + 288 + 1610))) then local v242=0 -0;while true do if (((4092 + 859)>=(18532 -13797)) and (v242==(13 -(9 + 3)))) then v168=2;break;end if (((4735 -1918)<=2837) and (0==v242)) then v78=(v171 + v169) -(473 -(456 + 16));v172=301 -(187 + 114);v242=238 -(231 + (12 -6));end end end if ((v168==(50 -(26 + 22))) or (4103>=4590)) then for v261=v169,v78 do local v262=903 -(388 + 515);local v263;while true do if (((743 + 1489 + 1256)>=3207) and (((1210 -(13 + 35)) -(345 + 817))==v262)) then v263=0 -0;while true do if ((v263==(0 -0)) or ((3575 -2563)>=2267)) then v172=v172 + (334 -(239 + 94));v91[v261]=v170[v172];break;end end break;end end end break;end if ((v168==((1796 -(677 + 1119)) -0)) or ((2430 -1069)<=(591 -(444 + (206 -90))))) then local v243=0;while true do if (((2763 -(52 + 65))>=(923 + 510)) and (v243==(1 + 0))) then v168=1207 -(124 + 1082);break;end if ((v243==(0 -0)) or ((6426 -3617)==4777)) then v169=v93[9 -7];v170,v171=v88(v91[v169](v13(v91,v169 + (1 -0),v78)));v243=1117 -(331 + 785);end end end end break;end if (((4314 -3106)==(2791 -(416 + 1167))) and (v167==1)) then v170=nil;v171=nil;v167=4 -2;end if (((6076 -(47 + 1404))>=(975 -695)) and (v167==((5369 -4250) -(1008 + 111)))) then v168=0;v169=nil;v167=(1480 -(1034 + 444)) -1;end end elseif ((4509==(12140 -7631)) and (v94>(59 -18))) then v91[v93[1298 -(815 + 481)]]= #v91[v93[4 -(265 -(63 + 201))]];else local v206=0 -0;local v207;local v208;while true do if (((1308 + 3385)>=(777 + 3058)) and (v206==(639 -(605 + 34)))) then v207=0;v208=nil;v206=(1921 -(53 + 40)) -(197 + 1630);end if ((v206==((1761 -(1190 + 570)) -0)) or (757>793)) then while true do if (((6070 -(168 + 1181))==((14317 -(679 + 397)) -8520)) and (v207==(0 -0))) then v208=v93[3 -1];v91[v208](v13(v91,v208 + 1,v78));break;end end break;end end end v77=v77 + 1;break;end end break;end end break;end end end end A,B=v27(v11(v81));if  not A[1] then local v95=v35[4][v77] or "?";error("Script error at ["   .. v95   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end if (v58==0) then v59=v35[1];v60=v35[2];v58=1;end end end return v29(v28(),{},v17)();end v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end end end
